### DO NOT EDIT THIS FILE
### This file is auto-generated by the Dyad command-line compiler.
### If you edit this code it is likely to get overwritten.
### Instead, update the Dyad source code and regenerate this file


@doc Markdown.doc"""
   PVCellValidation(; name)
"""
@component function PVCellValidation(; name)
  __params = Any[]
  __vars = Any[]
  __systems = System[]
  __guesses = Dict()
  __defaults = Dict()
  __initialization_eqs = []
  __eqs = Equation[]

  ### Symbolic Parameters

  ### Variables

  ### Constants
  __constants = Any[]

  ### Components
  push!(__systems, @named cell = SpacePowerWorkshop.PVCell_validate())
  push!(__systems, @named vref = ElectricalComponents.VoltageSource())
  push!(__systems, @named i = ElectricalComponents.CurrentSensor())
  push!(__systems, @named ground = ElectricalComponents.Ground())

  ### Guesses

  ### Defaults

  ### Initialization Equations

  ### Assertions
  __assertions = []

  ### Equations
  push!(__eqs, vref.V ~ t * 35 / 10)
  push!(__eqs, connect(ground.g, cell.n, vref.n))
  push!(__eqs, connect(cell.p, i.n))
  push!(__eqs, connect(i.p, vref.p))

  # Return completely constructed System
  return System(__eqs, t, __vars, __params; systems=__systems, defaults=__defaults, guesses=__guesses, name, initialization_eqs=__initialization_eqs, assertions=__assertions)
end
export PVCellValidation

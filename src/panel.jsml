component SolarPanel
    parameter G::Real=1361      # solar irradiance at LEO orbit [W/m^2]
    parameter A::Real=1           # solar panel area [m^2]
    parameter η_ref::Real = 0.5       # reference efficiency
    parameter T_ref::Temperature = 273       # reference temperature [K]
    parameter β::Real=0.5           # temperature coefficient
    parameter α::Real= 0.5           # absorptivity of panel
    parameter ϵ::Real=0.5           # emissivity of panel
    parameter σ::Real=5.67e-8   # Stefan-Boltzmann constant [W/(m^2*K^4)] 

    variable G_eff::Real    # effective irradiance at solar panel [W/m^2]
    variable T::Real        # panel temperature [K]
    variable η::Real        # panel efficiency
    variable P::Real        # power produced [W]

    θ = RealInput()        # angle between panel normal vector and sat-to-Sun vector [rad]
    sunlight = RealInput() 
relations
    initial T = 273
    initial P = 0.0
    T = ((α * G_eff)/(ϵ * σ))^(1/4)
    G_eff = G * cos(θ) * sunlight
    η = η_ref*(1 - β*(T - T_ref))
    P = G_eff * A * η
end 

component SunlightBlock
    extends BlockComponents.SO
relations
    y = sunlight_func(time)
end

component ThetaBlock
    extends BlockComponents.SO
relations
    y = theta(time)
end

component SolarPanelTest
    s = SolarPanel()
    input1 = SunlightBlock()
    input2 = ThetaBlock()
relations
    connect(s.sunlight, input1.y)
    connect(s.θ, input2.y)
metadata {
    "JuliaSim": {
        "experiments": {
            "simpanel": { "stop" : 10}
        }
    }
}
end